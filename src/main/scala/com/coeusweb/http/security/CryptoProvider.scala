/* - Coeus web framework -------------------------
 *
 * Licensed under the Apache License, Version 2.0.
 *
 * Author: Spiros Tzavellas
 */
package com.coeusweb.http.security

/**
 * Has methods for signing and encrypting data.
 */
trait CryptoProvider {
  
  /**
   * Encrypt the specified message.
   * 
   * @param msg the message to encrypt
   * @param key the secret key to use for the encryption
   * @return the encrypted message
   */
  def encrypt(msg: String, key: Array[Byte]): Array[Byte]
  
  /**
   * Decrypt the specified (encrypted) message.
   * 
   * @param msg the message to decrypt
   * @param key the secret key to use for the decryption
   * @return the plain-text message
   */
  def decrypt(msg: Array[Byte], key: Array[Byte]): String
  
  /**
   * Sign the specified message.
   * 
   * @param data the message to sign as a sequence of strings
   * @param key the secret key to use for signing
   * @return the signature of the message
   */
  def sign(data: Seq[String], key: Array[Byte]): Array[Byte]
  
  /**
   * Verify the signature of the specified message.
   * 
   * @param signature the signature of the message
   * @param data the message that must produce the signature
   * @param key the secret key to use for the signing
   * @return true if the signature generated by data using the specified key
   *         matches the specified signature
   */
  def verify(signature: Array[Byte], data: Seq[String], key: Array[Byte]): Boolean
}